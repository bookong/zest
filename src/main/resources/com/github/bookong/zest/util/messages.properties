run=[Zest] Test case "%1$s"
run.fail=Failed to execute unit test
no.data=No test case data found
no.annotation.zest=No @ZestTest annotation found
file.found=File (%1$s) not found

parse=Failed to parse test case data (%1$s)
parse.common.attr=Failed to get attribute %2$s on <%1$s>
parse.common.attr.unknown=<%1$s> does not support attribute %2$s
parse.common.attr.duplicate=Duplicate attribute %1$s="%2$s"
parse.common.attr.empty=The value of attribute %1$s cannot be empty
parse.common.class.found=Unable to get class %1$s
parse.common.children=<%1$s> should not have child elements
parse.common.children.unknown=<%1$s> does not support child elements <%2$s>
parse.common.children.list=<%1$s> children elements must be a list of <%2$s>

parse.zest=The root element <Zest> could not be found
parse.zest.necessary=<Zest> must and can only have three sub-elements: <Description>, <Sources> and <Param> (and the order is fixed)
parse.sources.error=<Sources> parsing failed
parse.source.error=<Source Id="%1$s"> parse failed
parse.source.necessary=<Source> must and can only have two elements <Init> and <Verify> (and the order is fixed)
parse.source.init.error=<Init> parse failed
parse.source.verify.error=<Verify> parsing failed
parse.source.operation.match=According to the bound operator %1$s, the children elements of <%2$s> must be a list of <%3$s>
parse.source.operation.unknown=Unsupported operator %1$s

parse.table.error=<Table Name="%1$s"> parse failed
parse.table.meta=Failed to parse database MetaData
parse.table.sort.exist=<Sort Field="%1$s"> Can\u2019t find the corresponding field in the actual database
parse.table.rule=<Rule Field="%1$s"> Can\u2019t find the corresponding field in the actual database

parse.collection.sort.exits=<Sort Field="%1$s"> Cannot find the corresponding field in the actual database (in other words, it needs to match the field of the EntityClass corresponding class of <Table>)
parse.collection.rule=<Rule Field="%1$s"> Cannot find the corresponding field in the actual database (in other words, it needs to match the field of the EntityClass corresponding class of <Table>)

parse.sorts.error=<Sorts> parsing failed
parse.sorts.position=Only the <Table> or <Collection> under <Verify> can add elements <Sorts>
parse.sorts.order=<Sorts> must be before <Rules> and <Data>, and there can only be one
parse.sort.error=<Sort Field="%1$s"> parse failed
parse.sort.direction=The content of the Direction attribute must be asc or desc (if it is empty, the default is asc)

parse.rules.error=<Rules> parsing failed
parse.rules.position=Only the <Table> or <Collection> under <Verify> can add elements <Rules>
parse.rules.order=<Rules> must be before <Data> and there can only be one
parse.rule.error=<Rule Field="%1$s"> parse failed
parse.rule.choice=It must be one of <RegExp>, <CurrentTime>, <Range> or <FromCurrentTime> under <Rule>
parse.rule.from.unit.unknown=<FromCurrentTime> Property Unit value (%1$s) is not supported
parse.rule.manual.from.unit.unknown=The unit value %1$d is not supported
parse.rule.range.choice=<Range> At least one of the attributes From and To must be

parse.operator=@ZestSource(value="%1$s") can only be annotated on attributes of type %2$s
parse.executor=@ZestSource(value="%1$s" executorClass=%2$s.class) failed to create an instance of the executor

parse.param.error=<Param> parsing failed
parse.param.none=<ParamField Name="%1$s"> Cannot find the corresponding attribute field in the test parameter object
parse.param.obj.load=<ParamField Name="%1$s"> failed when testing parameter object based on content assignment
parse.param.nonsupport.map=Does not support automatic assignment of Map type attributes
parse.param.init=The method %1$s() annotated by @ZestTest must have one and only one parameter, and must be a subclass of com.github.bookong.zest.core.testcase.ZestParam

parse.data.error=Failed to parse <Data> on line %1$d
parse.data.table.row.exist=The field %1$s described by <Data> cannot be found in the actual database table %2$s
parse.data.date=Failed to parse date "%1$s". The pattern must be "yyyy-MM-dd'T'HH:mm:ss.SSSX", For example "2020-08-09T10:12:00.000+08"

operator.unbound=@ZestSource(value="%1$s") annotation not found
operator.cast=@ZestSource(value="%1$s") annotated operator cannot be converted from %2$s to %3$s

verify.ignore=<Source Id="%1$s"> Ignore data verification
verify.rule.not.null=The data to be verified by <Rule Field="%1$s"> cannot be a NULL value
verify.rule.must.number=The data to be verified by <Rule Field="%1$s"> must be a value. The actual data is %2$s
verify.rule.gt=The data to be verified by <Rule Field="%1$s"> must be greater than %2$s. Actual data is %3$s
verify.rule.gte=The data to be verified by <Rule Field="%1$s"> must be greater than or equal to %2$s. Actual data is %3$s
verify.rule.lt=The data to be verified by <Rule Field="%1$s"> must be less than %2$s. Actual data is %3$s
verify.rule.lte=The data to be verified by <Rule Field="%1$s"> must be less than or equal to %2$s. Actual data is %3$s
verify.rule.date.type=The data to be verified by <Rule Field="%1$s"> must be java.util.Date type
verify.rule.date.current=The data to be verified by <Rule Field="%1$s"> must be the current time (between %2$s and %3$s). The actual data is "%4$s"
verify.rule.date.from=The data to be verified by <Rule Field="%1$s"> must be the value of the specified distance from the current time (between %2$s and %3$s). The actual data is "%4$s"
verify.rule.regexp=The data to be verified by <Rule Field="%1$s"> must match the regular expression: "%2$s". The actual data is "%3$s"
verify.rule.ignore=Although <Rule Field="%1$s"> specifies the validation rules, No. %2$d <Data> data clearly specifies the expected value, and the content in <Data> is used for validation

verify.table.ignore=<Source Id="%1$s"><Verify><Table Name="%2$s"> Ignore data verification
verify.table.start=<Source Id="%1$s"><Verify><Table Name="%2$s"> Start verifying data...
verify.table.size=<Source Id="%1$s"><Verify><Table Name="%2$s"> The quantity of <Data> does not match the actual

verify.row.error=<Source Id="%1$s"><Verify><Table Name="%2$s"> No. %3$d <Data> data verification failed
verify.row.data.null=Column %1$s must be NULL
verify.row.data.not.null=Column %1$s cannot be a NULL value
verify.row.data.date=Column %1$s must be java.util.Date
verify.row.data=The value of column %1$s must be %2$s

verify.document.error=<Source Id="%1$s"><Verify><Collection Name="%2$s"> No. %3$d <Data> data verification failed
verify.document.type=Expecting %1$s type data, it is actually %2$s type data
